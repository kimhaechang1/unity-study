총과 총을 쏘는 슈터 컴포넌트 제작
레이 캐스트를 사용한 사격감지, 파티클 시스템을 사용한 시각효과
코루틴을 이용한 처리중간에 대기시간을 삽입하는 방법
C#인터페이스를 활용한 데미지 메서드 구현
IK를 이용하여 캐릭터가 총을 자연스럽게 잡게 함

!인터페이스에 대한 이해

공격에 대한 서로다른 반응을 구현하는 가장 나쁜 방법은 공격당한 오브젝트의 타입을 일일이 검사하고 if 문으로 각 타입마다 서로다른 반응을 구현하는 겁니다.

-> 이를 위해 인터페이스를 사용 : 공격당한 다양한 타입의 오브젝트를 하나의 인터페이스로 추상화하여 다룰 수 있습니다.

인터페이스의 메서드는 선언만 존재하고 구현이 없습니다.
구현은 자신을 상속하는 클래스에 맡깁니다.
인터페이스를 상속한 클래스는 인터페이스에 선언된 메서드를 반드시 public으로 구현해야 합니다.

좀비 서바이버에서 공격당할 수 있는 모든 대상은 IDamageable 인터페이스를 상속

Using UnityEngine;

public interface IDamageable{
 void OnDamage(float damage, Vector3 hitPoint, Vector3 hitNormal);
 }

 damage : 데미지의 크기
 hitPoint : 공격당한 위치
 hitNormal : 공격당한 표면의 방향


!총 게임 오브젝트 준비
 총 자체(Gun)과 총을 쏘는 슈터 (shooter)가 분리된다는 점에 주목
 -> 분리하는 이유는 간결함과 확장성 때문 (ex : 다양한 총기를 구현할 때 사람은 변경하지 않고 총만 교체하면 됨)
(1) gun 게임 오브젝트 준비
 총의 위치의 기준점이 될 자식 오브젝트를 먼저 추가(gun pivot)하고 그 다음 준비된 총 프리팹을 이용해
 총 게임 오브젝트를 추가
 1. Player Character 에서 자식 오브젝트를 empty로 생성후 이름을 Gun pivot으로 설정
 2. 포지션을 0,1,0.5로 지정함 (Gun 오브젝트의 기준점이 됨)
 3. prefabs에 gun을 gunpivot으로 옮기고, 위치를 -0.2,-0.04,0.17로 설정 
 (gun pivot오브젝트가 오른쪽 팔꿈치에 위치할 때, 캐릭터 가슴 앞에 배치되도록)


Gun 오브젝트에 필요한 자식 오브젝트
 Model : 3D 총 모델
 Left Handle : 캐릭터의 왼손이 위치할 곳
 Right Handle : 캐릭터의 오른손이 위치할 곳
 Fire Position : 탄알 발사 위치

(2) 라인 렌더러(line Renderer) 컴포넌트 추가
 총을 쏠 때 탄알의 궤적을 그리기 위해
 1. gun 오브젝트에 line Renderer 컴포넌트 추가
 2. Shadow 관련 기능 off (탄알 궤적에 그림자가 필요없기 때문)
 3. Materials에 bullet 추가
 4. position에서 size 0 (포지션 필드에 설정된 점 사이로 선을 그릴 필요 없음)
 5. Width 0.02 (탄알 궤적의 두께)

(3) Gun에 오디오 컴포넌트 추가하기
 1. gun 오브젝트에 Audio Source 컴포넌트 추가
 2. Play on Awake (계속 켜두기) off

(4) 파티클 효과 추가하기
 유니티에서 연기, 화염재 등의 시각 효과는 파티클 시스템(particle system) 컴포넌트를 사용
 파티클 시스템 : 여러 작은 스프라이트 이미지를 랜덤하게 휘날리는 방식
 미리 만들어둔 프리팹을 gun 오브젝트에 추가하기
 1. MuzzleFlashEffect와 ShelllEjectEffect 프리팹을 gun 오브젝트에 추가
 2. 각각 위치를 0,0.08,0.2 그리고 0.01,0.09,-0.02로 변경

(5) gun script 추가하기
 1. Scripts폴더의 Gun 스크립트를 하이어라키 창의 gun 오브젝트로 추가
 Awake() : 사용할 컴포넌트 가져오기
 OnEnable() : 총의 상태를 초기화
 Fire() : 총을 발사, Shot()메서드를 감싸안음
 Shot() : 실제 발사 처리 

 public Fire메서드가 사용되어 발사를 시도-> 총이 발사가능 하다면 shot()메서드 실행
 
 enum타입 변수는 미리 정의된 여러 값 중 하나를 가질 수 있습니다.
 state 접근자가 public get, private set으로 설정되었으므로, gun 클래스 외부에서는 총의 상태를 읽을 수 있지만,
 총의 상태를 임의로 변경할 수 없습니다.

 public Transform fireTransform : 총구 위치와 방향을 알려주는 트랜스폼 컴포넌트

 gun 오브젝트에 필요한 갖가지 컴포넌트에 대해 기본적 정의를 내려주고
 Awake에서 그 컴포넌트 중 사용할 컴포넌트에 대하여 GetComponent<>()를 통해 들고 옵니다.

 lineRenderer같은 경우 이미 인스펙터에서 비활성화 했지만, 코드에서도 비활성화를 확실히 키는 것이 좋습니다.
 lineRenderer에서 position은 점의 개수를 뜻하며, 2개를 쓴 이유는 하나는 총구 위치, 두번째는 탄알이 닿을 위치를 설정 한 것입니
